nat_list(X)を計算する際，まずnat_list([]).により，空リストが返され，
以降，ルールnat_list([N|X]) :- nat(N), nat_list(X).についての計算となる．
この際，Q = nat_list([N|Y]), P = nat_list(X)として，QとPに対する再汎単一化子[X ↦ [N|Y]]が求められる．
ここで，nat(N)の計算で，まず[N ↦ z]が返され，次にnat_list(Y)の計算に移る．
これははじめの計算nat_list(X)と同じで，まず[ Y ↦ []]が返され，[z]という解が見つかる．
この後，再開はnat_list(Y)での，nat_list([N|X]) :- nat(N), nat_list(X).の左辺との単一化に戻る(∵深さ優先探索)ため，
nat(N)のnat(s(N)) :- nat(N).の左辺との単一化が行われる前により深い階層で前述の単一化が行われてしまい，
これが無限にループするので，有限時間で返される解としては，zしか要素に含まないリストのみが返される．
つまり，有限時間では，nat_list(X)の再汎単一化子として，[X ↦ (zのみを含むリスト)]しか返されないので，
X = [s(Y)]との単一化に成功せず，解が返されない．
